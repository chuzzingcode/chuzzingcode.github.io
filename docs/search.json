[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Christopher Hussey",
    "section": "",
    "text": "Hi! My name’s Christopher (though, I usually go by Chris), and welcome to my website! I’m a Politics, Philosophy, and Economics major at Pomona College, with a burgeoning interest in Data Science and all the visualizations that come with it. Some of my academic areas of interest are security, international relations, Post Structuralist philosophy, and surveillance! Outside of class, you can catch me skating, planning events, and stressing about class!"
  },
  {
    "objectID": "tidydata1.html",
    "href": "tidydata1.html",
    "title": "Lack of Complete Indoor Plumbing: 2023 vs 2022",
    "section": "",
    "text": "Code\n# Clean data compiled from code referenced in article (https://waterdata.usgs.gov/blog/acs-maps/). \n# Code was revised to pull data for all US counties for years 2022 - 2023.\n\n# Load packages -----\nlibrary(tidycensus)\nlibrary(sf) \nlibrary(janitor) \nlibrary(tidyverse)\n\n\n\n# Helper functions -----\nget_census_data &lt;- function(geography, var_names, year, proj, survey_var) {\n  df &lt;- get_acs(\n    geography = geography,\n    variable = var_names,\n    year = year,\n    geometry = FALSE,\n    survey = survey_var) |&gt;\n    clean_names() |&gt;\n    mutate(year = year)\n  \n  return(df) \n}\n\n# Grab relevant variables - B01003_001: total population, B25049_004: households lacking plumbing----\nvars &lt;- c(\"B01003_001\", \"B25049_004\")\n\n# Pull data for 2023 and 2022 for all US counties ------\nwater_insecurity_2023 &lt;- get_census_data(\n  geography = 'county', \n  var_names = vars, \n  year = \"2023\", \n  proj = \"EPSG:5070\", \n  survey_var = \"acs1\"\n) |&gt;\n  mutate(\n    variable_long = case_when(\n      variable == \"B01003_001\" ~ \"total_pop\",\n      variable == \"B25049_004\" ~ \"plumbing\",\n      .default = NA_character_  \n    )\n  ) |&gt; \n  select(geoid, name, variable_long, estimate, year) |&gt; \n  pivot_wider(\n    names_from = variable_long,\n    values_from = estimate\n  ) |&gt; \n  mutate(\n    percent_lacking_plumbing = (plumbing / total_pop) * 100\n  )\n\nwater_insecurity_2022 &lt;- get_census_data(\n  geography = 'county', \n  var_names = vars, \n  year = \"2022\", \n  proj = \"EPSG:5070\", \n  survey_var = \"acs1\"\n) |&gt;\n  mutate(\n    variable_long = case_when(\n      variable == \"B01003_001\" ~ \"total_pop\",\n      variable == \"B25049_004\" ~ \"plumbing\",\n      .default = NA_character_  \n    )\n  ) |&gt; \n  select(geoid, name, variable_long, estimate, year) |&gt; \n  pivot_wider(\n    names_from = variable_long,\n    values_from = estimate\n  ) |&gt; \n  mutate(\n    percent_lacking_plumbing = (plumbing / total_pop) * 100\n  )\n\n\n\n\nCode\nwi23 &lt;- water_insecurity_2023 |&gt; \n  as.data.frame() |&gt; \n  select(geoid, name, percent_lacking_plumbing) |&gt; \n  rename(p23 = percent_lacking_plumbing)\n\nwi22 &lt;- water_insecurity_2022 |&gt; \n  as.data.frame() |&gt; \n  select(geoid, name, percent_lacking_plumbing) |&gt; \n  rename(p22 = percent_lacking_plumbing)\n\ncomp &lt;- inner_join(wi23, wi22, by = c(\"geoid\", \"name\"))\n\n\n\n\nCode\nggplot(comp, aes(x = p22, y = p23)) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\") +\n  geom_point(alpha = 0.6, size = 1.2) +\n  coord_equal() +\n  scale_x_continuous(labels = scales::label_percent(accuracy = 0.01)) +\n  scale_y_continuous(labels = scales::label_percent(accuracy = 0.01)) +\n  labs(\n    title = \"Households Lacking Complete Indoor Plumbing\",\n    subtitle = \"County-level ACS 1-year comparison (2023 vs 2022)\",\n    x = \"2022 % lacking\",\n    y = \"2023 % lacking\",\n    caption = \"Source: U.S. Census Bureau, American Community Survey 1-year via tidycensus\"\n  ) +\n  theme_minimal(base_size = 12)"
  }
]